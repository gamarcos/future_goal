// Generated by Dagger (https://dagger.dev).
package br.com.gabrielmarcos.register.insert.di;

import br.com.gabrielmarcos.core.database.GoalDatabaseRepository;
import br.com.gabrielmarcos.register.insert.ui.InsertGoalsViewModel;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class InsertGoalsModule_ProvidesInsertGoalsFragmentFactory implements Factory<InsertGoalsViewModel> {
  private final InsertGoalsModule module;

  private final Provider<GoalDatabaseRepository> repositoryProvider;

  public InsertGoalsModule_ProvidesInsertGoalsFragmentFactory(InsertGoalsModule module,
      Provider<GoalDatabaseRepository> repositoryProvider) {
    this.module = module;
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public InsertGoalsViewModel get() {
    return providesInsertGoalsFragment(module, repositoryProvider.get());
  }

  public static InsertGoalsModule_ProvidesInsertGoalsFragmentFactory create(
      InsertGoalsModule module, Provider<GoalDatabaseRepository> repositoryProvider) {
    return new InsertGoalsModule_ProvidesInsertGoalsFragmentFactory(module, repositoryProvider);
  }

  public static InsertGoalsViewModel providesInsertGoalsFragment(InsertGoalsModule instance,
      GoalDatabaseRepository repository) {
    return Preconditions.checkNotNull(instance.providesInsertGoalsFragment(repository), "Cannot return null from a non-@Nullable @Provides method");
  }
}
