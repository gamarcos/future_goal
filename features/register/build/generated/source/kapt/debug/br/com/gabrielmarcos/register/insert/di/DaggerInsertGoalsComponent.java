// Generated by Dagger (https://dagger.dev).
package br.com.gabrielmarcos.register.insert.di;

import br.com.gabrielmarcos.core.database.GoalDAO;
import br.com.gabrielmarcos.core.database.GoalDatabaseRepository;
import br.com.gabrielmarcos.core.database.GoalDatabaseRepository_Factory;
import br.com.gabrielmarcos.core.di.CoreComponent;
import br.com.gabrielmarcos.register.insert.ui.InsertGoalsFragment;
import br.com.gabrielmarcos.register.insert.ui.InsertGoalsFragment_MembersInjector;
import br.com.gabrielmarcos.register.insert.ui.InsertGoalsViewModel;
import dagger.internal.DoubleCheck;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DaggerInsertGoalsComponent implements InsertGoalsComponent {
  private Provider<GoalDAO> goalDAOProvider;

  private Provider<GoalDatabaseRepository> goalDatabaseRepositoryProvider;

  private Provider<InsertGoalsViewModel> providesInsertGoalsFragmentProvider;

  private DaggerInsertGoalsComponent(InsertGoalsModule insertGoalsModuleParam,
      CoreComponent coreComponentParam) {

    initialize(insertGoalsModuleParam, coreComponentParam);
  }

  public static Builder builder() {
    return new Builder();
  }

  @SuppressWarnings("unchecked")
  private void initialize(final InsertGoalsModule insertGoalsModuleParam,
      final CoreComponent coreComponentParam) {
    this.goalDAOProvider = new br_com_gabrielmarcos_core_di_CoreComponent_goalDAO(coreComponentParam);
    this.goalDatabaseRepositoryProvider = GoalDatabaseRepository_Factory.create(goalDAOProvider);
    this.providesInsertGoalsFragmentProvider = DoubleCheck.provider(InsertGoalsModule_ProvidesInsertGoalsFragmentFactory.create(insertGoalsModuleParam, goalDatabaseRepositoryProvider));
  }

  @Override
  public void inject(InsertGoalsFragment insertGoalsFragment) {
    injectInsertGoalsFragment(insertGoalsFragment);
  }

  private InsertGoalsFragment injectInsertGoalsFragment(InsertGoalsFragment instance) {
    InsertGoalsFragment_MembersInjector.injectViewModel(instance, providesInsertGoalsFragmentProvider.get());
    return instance;
  }

  public static final class Builder {
    private InsertGoalsModule insertGoalsModule;

    private CoreComponent coreComponent;

    private Builder() {
    }

    public Builder insertGoalsModule(InsertGoalsModule insertGoalsModule) {
      this.insertGoalsModule = Preconditions.checkNotNull(insertGoalsModule);
      return this;
    }

    public Builder coreComponent(CoreComponent coreComponent) {
      this.coreComponent = Preconditions.checkNotNull(coreComponent);
      return this;
    }

    public InsertGoalsComponent build() {
      Preconditions.checkBuilderRequirement(insertGoalsModule, InsertGoalsModule.class);
      Preconditions.checkBuilderRequirement(coreComponent, CoreComponent.class);
      return new DaggerInsertGoalsComponent(insertGoalsModule, coreComponent);
    }
  }

  private static class br_com_gabrielmarcos_core_di_CoreComponent_goalDAO implements Provider<GoalDAO> {
    private final CoreComponent coreComponent;

    br_com_gabrielmarcos_core_di_CoreComponent_goalDAO(CoreComponent coreComponent) {
      this.coreComponent = coreComponent;
    }

    @Override
    public GoalDAO get() {
      return Preconditions.checkNotNull(coreComponent.goalDAO(), "Cannot return null from a non-@Nullable component method");
    }
  }
}
