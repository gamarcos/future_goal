// Generated by Dagger (https://dagger.dev).
package br.com.gabrielmarcos.core.di.module;

import com.google.firebase.auth.FirebaseAuth;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FirebaseModule_ProvideFirebaseAuthFactory implements Factory<FirebaseAuth> {
  private final FirebaseModule module;

  public FirebaseModule_ProvideFirebaseAuthFactory(FirebaseModule module) {
    this.module = module;
  }

  @Override
  public FirebaseAuth get() {
    return provideFirebaseAuth(module);
  }

  public static FirebaseModule_ProvideFirebaseAuthFactory create(FirebaseModule module) {
    return new FirebaseModule_ProvideFirebaseAuthFactory(module);
  }

  public static FirebaseAuth provideFirebaseAuth(FirebaseModule instance) {
    return Preconditions.checkNotNull(instance.provideFirebaseAuth(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
