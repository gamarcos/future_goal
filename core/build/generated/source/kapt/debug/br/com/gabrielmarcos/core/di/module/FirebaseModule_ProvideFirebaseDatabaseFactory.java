// Generated by Dagger (https://dagger.dev).
package br.com.gabrielmarcos.core.di.module;

import com.google.firebase.database.FirebaseDatabase;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FirebaseModule_ProvideFirebaseDatabaseFactory implements Factory<FirebaseDatabase> {
  private final FirebaseModule module;

  public FirebaseModule_ProvideFirebaseDatabaseFactory(FirebaseModule module) {
    this.module = module;
  }

  @Override
  public FirebaseDatabase get() {
    return provideFirebaseDatabase(module);
  }

  public static FirebaseModule_ProvideFirebaseDatabaseFactory create(FirebaseModule module) {
    return new FirebaseModule_ProvideFirebaseDatabaseFactory(module);
  }

  public static FirebaseDatabase provideFirebaseDatabase(FirebaseModule instance) {
    return Preconditions.checkNotNull(instance.provideFirebaseDatabase(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
